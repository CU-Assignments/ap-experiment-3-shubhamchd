#Aim:
To reverse a portion of a linked list between positions left and right.

##Objectives:

Create a dummy node and move the pointer prev to just before the left position.
Set cur to the node at the left position.
Reverse the nodes between left and right by adjusting the pointers.
Return the head of the modified linked list.

###Code
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        if (!head || left == right) {
            return head;
        }

        ListNode* dummy = new ListNode(0);
        dummy->next = head;
        ListNode* prev = dummy;

        for (int i = 0; i < left - 1; i++) {
            prev = prev->next;
        }

        ListNode* cur = prev->next;

        for (int i = 0; i < right - left; i++) {
            ListNode* temp = cur->next;
            cur->next = temp->next;
            temp->next = prev->next;
            prev->next = temp;
        }

        return dummy->next;        
    }
};
